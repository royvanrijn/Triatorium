package com.royvanrijn.triatorium.board;

import com.royvanrijn.triatorium.Triatorium;
import com.royvanrijn.triatorium.bot.GreedyBot;
import com.royvanrijn.triatorium.bot.SmartBot;
import com.royvanrijn.triatorium.bot.TriatoriumBot;
import com.royvanrijn.triatorium.bot.genetic.WeightedBot;
import com.royvanrijn.triatorium.bot.genetic.WeightedWithLocationBot;

import java.util.ArrayList;
import java.util.List;

public class Benchmark {

    private List<TriatoriumBot> bestBots = new ArrayList<>();

    public Benchmark() {

        bestBots.add(new SmartBot());
        bestBots.add(new GreedyBot());

        // Bot evolved with weights for placement and explosion (optimized in a single order):
        bestBots.add(new WeightedBot("WeightedBot_BestSingleDirection",
                        "[0.9330068403265662, 0.7875753938165115, 0.9159911082291234, 0.8198625763626214, 0.5492306571595474, 0.6733758380676657, 0.5342224015911637, 0.9307582198698714, 0.1324284908856731, 0.4436339255466355, 0.5961198924621318, 0.9729539667237973, 0.6456517293024934, 0.9764848690792457, 0.2507924719370834, 0.9285094752006473, 0.5446518380892765, 0.1760254271396755, 0.20138660769708927, 0.015021725563408972, 0.8036696024342461, 0.9662688837182296, 0.3058306391864256, 0.015244790601184444, 0.20338101416944787, 0.2222834448464045, 0.4035002912049396, 0.15943438362081874, 0.030819005502298435, 0.3325183417991002]",
                        "[0.9162078761223386, 0.01760784751539468, 0.8399202680997501, 0.3481401248617436, 0.9689713332727874, 0.45123818598411813, 0.47761811678544375, 0.17400297535055087, 0.06479138151706054, 0.13480939182670182, 0.1422265942584795, 0.7256664279394499, 0.39747233848911634, 0.7012155280916346, 0.138591506147699, 0.35856992858035186, 0.7781880455386866, 0.9847274066327963, 0.6759333978760567, 0.09147078183806712, 0.34878672776436714, 0.30953177525879383, 0.3942382521030735, 0.5518532552859614]"
                )
        );

        // Bot evolved with weights for placement and explosion (optimized for both directions, forgot that):
        bestBots.add(new WeightedBot("WeightedBot_MultiDirectional",
                "[0.9900741660654488, 0.492108088958257, 0.8578240833450914, 0.017698985775946974, 0.7115048431767246, 0.47207027873855145, 0.9083461027546154, 0.7695581848498954, 0.9103321778822326, 0.6161005398700057, 0.33696570664879033, 0.24533908959887507, 0.7930209331920696, 0.20730448251892708, 0.06561614559380335, 0.05569375299550894, 0.9260921635791294, 0.6958516808373251, 0.35656804908042594, 0.00899148687247775, 0.4658265668229038, 0.8400704666454879, 0.9321762060249628, 0.44770450809190265, 0.3800542152708486, 0.3283973190406435, 0.598033357039976, 0.5136464101823762, 0.12831447462464096, 0.6592546746848329]",
                        "[0.6086227059565822, 0.001329244933025775, 0.8445905561929508, 0.058619103081099966, 0.9820267871208848, 0.9051449245859059, 0.12343547415918266, 0.6451188533664886, 0.006435267670388267, 0.37502000053493345, 0.6773834438952229, 0.8205599832433649, 0.06182376972646064, 0.5742923780344179, 0.03810265837751503, 0.3416721284371832, 0.9217734828226178, 0.8769083293387638, 0.8921988012494374, 0.867740491003343, 0.5673870482292014, 0.009953463713367583, 0.2866855166457787, 0.08361396460535175]"
                )
        );

        // TODO: Running: [1] = based on multidirectional, [2] = from random, [3]and[4] = big pool random (second wit higher mutation)

        // Bot evolved with weights for placement, explosion and location: (from best multidirectional)
        bestBots.add(new WeightedWithLocationBot(
                "[0.9900741660654488, 0.7930268273819638, 0.9651848045410932, 0.19087660735731082, 0.13031412032047318, 0.4668010312718015, 0.9083461027546154, 0.7987787454118984, 0.9103321778822326, 0.6161005398700057, 0.33696570664879033, 0.24533908959887507, 0.7930209331920696, 0.42147738143275904, 0.029523307099583174, 0.05569375299550894, 0.9260921635791294, 0.6958516808373251, 0.10212492387899852, 0.418861063066565, 0.6115636349352247, 0.8400704666454879, 0.885612259040935, 0.45511750788979244, 0.3800542152708486, 0.3283973190406435, 0.18771982156756573, 0.7560730543179891, 0.12831447462464096, 0.9502050029322866]",
                        "[0.37094412366760265, 0.001329244933025775, 0.8941990295222917, 0.058619103081099966, 0.9820267871208848, 0.9681282151108358, 0.12343547415918266, 0.5967402831010983, 0.006435267670388267, 0.37502000053493345, 0.9373112060673255, 0.803561142174093, 0.06182376972646064, 0.5742923780344179, 0.03810265837751503, 0.3416721284371832, 0.9217734828226178, 0.8769083293387638, 0.0891251726491632, 0.33210935781856277, 0.17453822095979532, 0.0823460902527221, 0.2866855166457787, 0.08361396460535175]",
                        "[0.16278028218420781, 0.3108152356657592, 0.23954534979387299, 0.8237192885823921, 0.1268033299968192, 0.5454452427295917, 0.40145651788173564, 0.13725865213183874, 0.3726671355960828, 0.6911755909550764, 0.7698144444360872, 0.023561102552143942, 0.38177073379149384, 0.6734524735563371, 0.7901481589324136, 0.4791707807461554, 0.4554298618556192, 0.9659462171314481, 0.29621145561062334, 0.28391653233863157, 0.3569060323009402, 0.48326339853517253, 0.059196781823016575, 0.9659406712948839, 0.7492755634844334, 0.2330952579973855, 0.8925879874548234, 0.4886759589204245, 0.020482540212217626, 0.48737519350888303, 0.06517724567719585, 0.2852519719613018, 0.19322048923821933, 0.8418714123937602, 0.40025244514056013, 0.49440511295363143, 0.05089822744988315, 0.3530308486106476, 0.18543403310498863, 0.35208860481255966, 0.4595793302402482, 0.9439240405070619, 0.22365282930563424, 0.24233679073914838, 0.6206665231463135, 0.245947834205412, 0.04675425182488746, 0.1284263669432787, 0.6502360147997428, 0.9618873402498298, 0.45011862732395236, 0.2062461132415766, 0.5974285614392911, 0.911134653977737, 0.9377748208390335, 0.09296444553368355, 0.29497781030121906, 0.14930636875852454, 0.4408339240896625, 0.8905199022920764, 0.9901989909421834, 0.10232127045305495, 0.6672226868647155, 0.8131994954274642, 0.640173307479796, 0.7957021372463912, 0.46382341518284165, 0.8098385562077796, 0.38564696345268445, 0.42156060654048155, 0.3451632101126907, 0.5711594752772418, 0.4660762519307582, 0.7252333870101179, 0.16306585032456855, 0.02600894915659513, 0.018492756514207676, 0.5761207738011088, 0.537089565937048, 0.11173651564774123, 0.9210358205201148, 0.3791689032702771, 0.48689678966123695, 0.7160286940108977, 0.6621795988569641, 0.3428853447207806, 0.3442788917089704, 0.47544132438977704, 0.36329287562555646, 0.516486328604581, 0.44092449581856963, 0.7228261267472023, 0.5958391793665443, 0.9406340079747783, 0.9927811644247189, 0.7041067281088508, 0.4318584921033838, 0.9634605028688138, 0.7651453383022122, 0.5418123449237887, 0.7912975998610469, 0.1814562289363545]"
        ));

        // Bot evolved with weights for placement, explosion and location: (from random)
        bestBots.add(new WeightedWithLocationBot(
                "[0.7763588699827345, 0.3119200342646151, 0.5651695814111474, 0.027061385749427513, 0.17030366471661995, 0.050878277691627116, 0.5891241037523999, 0.10917075078413652, 0.7321184960052315, 0.8125474151935017, 0.751594349873829, 0.08420327568744279, 0.834937650245584, 0.4325150002159477, 0.041089573419536674, 0.5768408486435187, 0.20157166410828686, 0.78180824329302, 0.5246568418352854, 0.6732794453370484, 0.539951226058443, 0.8126736813187341, 0.1772254167316084, 0.614049494927301, 0.2988443652920798, 0.5714065096741583, 0.39046429915936853, 0.9199833467339761, 0.2480135489760149, 0.8469142126983784]",
                        "[0.32129330275706436, 0.04932329293203441, 0.6677093878129126, 0.10788284465232956, 0.883492175899902, 0.3712850479949238, 0.1693785559714115, 0.7003667304754164, 0.04154452369391981, 0.48491526703382737, 0.8494024607571176, 0.835501969978221, 0.0323255713632814, 0.9157710140015968, 0.1566840210653021, 0.3315508896591377, 0.6665485716136798, 0.968623864456008, 0.06829533206543714, 0.9451252629848109, 0.25495720053561366, 0.13627224353545087, 0.8291047461400352, 0.39271714505455724]",
                        "[0.25077276738030296, 0.7096863248288936, 0.4721475942431521, 0.10066049831521129, 0.5728057756701459, 0.03417479448024563, 0.5060316922055375, 0.15952924940470814, 0.959603896228352, 0.4550451249799077, 0.7493868266836555, 0.8478078027482338, 0.8420935301264084, 0.1285495354596703, 0.8028036423750862, 0.8022160937857127, 0.6505513208536196, 0.7329823244787811, 0.658862245311064, 0.4279918472658507, 0.4781004991908471, 0.6600847229568794, 0.2873767491149778, 0.15487207549013848, 0.055500066021395233, 0.3503733020226305, 0.33471565772366096, 0.9267104446628465, 0.8496243056030629, 0.3537864138450687, 0.6710692624289912, 0.2336382271597126, 0.17415914082076123, 0.12313267298967823, 0.8471366563893623, 0.42868660113809975, 0.8059511455980992, 0.19558299434303583, 0.6343805331636391, 0.6189656114702122, 0.7985168797531282, 0.41590353465324037, 0.5444458199657383, 0.15717654781023582, 0.9890439585153284, 0.24856400890651997, 0.3770833701426125, 0.9635619867645018, 0.4140393636486237, 0.43461210394702043, 0.5210798994282125, 0.8383932296801612, 0.21610400139398034, 0.1798671342604815, 0.05359680484688989, 0.6842893605725604, 0.028052857866487146, 0.5229017097088895, 0.12647256279794572, 0.9042136329129326, 0.4676624709331513, 0.5244426494264135, 0.07230291405174394, 0.3349278087131766, 0.15619392247108754, 0.9725335813927315, 0.6539019796870844, 0.20752642229042118, 0.26635786524511185, 0.12710134050832156, 0.20299119047973468, 0.9782749423252297, 0.7937815403702205, 0.5419596880867683, 0.20533166907632305, 0.6467798184955276, 0.48155580973614165, 0.4542526618948105, 0.9048699680364519, 0.8724384200567479, 0.042688834810365006, 0.6472255522994386, 0.5483687633703417, 0.055821300716477396, 0.8334779739588759, 0.7167389212775606, 0.8943678361775051, 0.7820989634448996, 0.2603249394335163, 0.6406229990990302, 0.09497412471716304, 0.5285155398126099, 0.6706384290073767, 0.995171810954731, 0.16729800261528427, 0.6798565951868591, 0.17835876447804955, 0.2515857182107545, 0.33610812589375905, 0.427726532145125, 0.8569534281603314, 0.8091778947351821]"
        ));

        // Bot evolved with weights for placement, explosion and location: (from random big pool)
        bestBots.add(new WeightedWithLocationBot(
                "[0.8646073846523006, 0.5776964124583538, 0.9926568070884816, 0.509937971418968, 0.1559700325033292, 0.2085613750881976, 0.5998537581459961, 0.09798316798242723, 0.16633848789844052, 0.23228986034161447, 0.08062209453620406, 0.5950854367207206, 0.9570829861118374, 0.8960164604709869, 0.5443504398725789, 0.7984801807932518, 0.16712548025101837, 0.3312626486260192, 0.43502884782257156, 0.7709760367684573, 0.22512702165643073, 0.22064473711844734, 0.9949930180305169, 0.9067300553938754, 0.3278579222516149, 0.342008553821466, 0.07189301099096068, 0.6903831869368349, 0.22384389610037414, 0.1728834812148241]",
                        "[0.6756552887843631, 0.1884050472370128, 0.3345452798127787, 0.020373504379091578, 0.8259958978182435, 0.8593482381071887, 0.7697401685173367, 0.2050807495840633, 0.3960818732224346, 0.09881438413776422, 0.7793876626582524, 0.6723829105362589, 0.8542266627633547, 0.04528536501346381, 0.831636472200592, 0.03036251784869559, 0.03304464375499927, 0.5645748473055902, 0.16314319753066453, 0.4209128959481908, 0.31427905830843506, 0.0035068692382106414, 0.7206098337562091, 0.8190219465693832]",
                        "[0.9075561902200189, 0.25752978693241757, 0.18894947234467885, 0.3249615230724501, 0.22260830290351075, 0.9323251275919071, 0.9367354864459979, 0.7650867723364304, 0.6870466062554719, 0.8960731253077526, 0.491087018543113, 0.4491764209221425, 0.7455544089916012, 0.3168875097411309, 0.9890339582190063, 0.24572122684119746, 0.1914101037399858, 0.35903424850587273, 0.2880092746423004, 0.23129504871507522, 0.4275383839210839, 0.07190035425781327, 0.7550302169734607, 0.04611862245974596, 0.7318272664742224, 0.6472801831537809, 0.6222944520673293, 0.7451537134621014, 0.11023739245188702, 0.14339852812077314, 0.19633079504897932, 0.3725409552225948, 0.8612695924657786, 0.9781913691069272, 0.13850887583009486, 0.7069218208910448, 0.546645062694339, 0.9797163831702816, 0.49662517630204883, 0.6261617158569768, 0.6655923520568843, 0.5481672084745436, 0.16044809407989868, 0.3222172914849214, 0.9639235382773083, 0.5318168953171767, 0.9385178669534948, 0.16036817781908907, 0.9741221057838538, 0.7483175602605653, 0.5091614568716505, 0.321759702987235, 0.07895295939556124, 0.6931347627543742, 0.08559715788945388, 0.4941794051567924, 0.11864505076860488, 0.8684967112392727, 0.7531666281812442, 0.7832173519233884, 0.3204853257102608, 0.3390900776089425, 0.08614712626444698, 0.704436226768509, 0.11970260658642595, 0.5748356421543407, 0.8322604244171601, 0.5869041472904727, 0.2618082523891795, 0.3764284739424558, 0.16490868292238803, 0.9694194124481956, 0.4291001933434697, 0.6959292614214574, 0.2463320336759297, 0.6029831473626666, 0.5178254456006789, 0.46254440379069717, 0.6192964891556084, 0.4865524090408474, 0.607535828974991, 0.10283465639120126, 0.2505848525283245, 0.9578325410058002, 0.6104599526404137, 0.30494331749055636, 0.8864774524601821, 0.23684470073505925, 0.5662545059483853, 0.7180364308553084, 0.748573389464677, 0.977230415061736, 0.5562861561880418, 0.7009994968427404, 0.4977174534442803, 0.3187321294653558, 0.2516347136117285, 0.9385359313616586, 0.8244612855216792, 0.6540148319024403, 0.18029743959083133, 0.7281653993145302]"
        ));

    }

    public List<TriatoriumBot> getBenchmark() {
        return bestBots;
    }

    public static void main(String[] args) {
        new Benchmark().runAll();
    }

    private void runAll() {
        Triatorium triatorium = new Triatorium();
        Board board = new Board();

        for(TriatoriumBot bot:getBenchmark()) {

            long totalScore = 0;

            for(TriatoriumBot inner:getBenchmark()) {

                long localScore = 0;
                for(int times = 0; times < 50; times++) {

                    triatorium.playGameWithBots(board, times%2, bot, inner);
                    int[] score = board.calculateScore();

                    totalScore += score[0];
                    localScore += score[0];

                    board.reset();

                    triatorium.playGameWithBots(board, times%2, inner, bot);
                    score = board.calculateScore();

                    totalScore += score[1];
                    localScore += score[1];

                    board.reset();
                }
                //System.out.println(bot.getName() + " vs " + inner.getName() + " takes " + localScore);
            }

            System.out.println("Bot: " + bot.getName() + " scores " + totalScore);
        }
    }
}
