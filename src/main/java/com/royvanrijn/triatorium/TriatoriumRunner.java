package com.royvanrijn.triatorium;

import com.royvanrijn.triatorium.board.Board;
import com.royvanrijn.triatorium.bot.TriatoriumBot;
import com.royvanrijn.triatorium.bot.WeightedBot;

import java.util.Arrays;

import static com.royvanrijn.triatorium.Printer.printBoard;

public class TriatoriumRunner {

    public static void main(String[] args) {
        new TriatoriumRunner().run();
    }

    private void run() {
        Board board = new Board();

        TriatoriumBot[] bots = new TriatoriumBot[] {
                new WeightedBot(0,
                        "[0.548816328305037, 0.41526370277334446, 0.35917727795901533, 0.977605682945059, 0.0238496121055658, 0.3139152785258187, 0.5385208494776342, 0.1041893005094583, 0.5072748967103208, 0.8055092056422369, 0.35290530964965916, 0.5584179923460777, 0.6732218252267883, 0.09345042139599613, 0.08343917675382828, 0.41166306842929556, 0.5593451169940975, 0.48660209422025746, 0.5793614193415665, 0.6040225350113245, 0.15592570494641977, 0.9261866421827443, 0.26327583591210746, 0.1256773192752686, 0.8658413199439632, 0.6854905325724101, 0.029340450426818876, 0.023232601289213783, 0.9204087683170856, 0.3498504888663653]",
                                "[0.0593392186506958, 0.09907656856606073, 0.46458072074552115, 0.05535916172146316, 0.852695747868453, 0.5439472918384168, 0.852415773805203, 0.9300282538360914, 0.1943735206901651, 0.2580217226458734, 0.8415997137148697, 0.5952186711012674, 0.6344583341290141, 0.2270869222673889, 0.11707944819121974, 0.012573992802125566, 0.895209781813068, 0.717168984687564, 0.9298480007929405, 0.13890261598130837, 0.6562871901137712, 0.05132283087051981, 0.3948854545313616, 0.42194382918196294]"
                ),
                new WeightedBot(1,
                        "[0.92442458950426, 0.6443468764092356, 0.7481876825514686, 0.3566717090540469, 9.145757879007732E-4, 0.33067157982419537, 0.14497147477473515, 0.8879987840131557, 0.6667470832812646, 0.23313551950183653, 0.4569923046861344, 0.8494092297587272, 0.5984601989857661, 0.30878281253603557, 0.019134681734079617, 0.7586272250559021, 0.16705784828345493, 0.23911429705650833, 0.6643609242251685, 0.34647269384746504, 0.4617419124560179, 0.7012647048149284, 0.9127600524427691, 0.9206362597707268, 0.08377851309762263, 0.20415020863195954, 0.1662207692441181, 0.4112365938764627, 0.4956017238131897, 0.524979774200449]",
                        "[0.15828277001154512, 0.023251539708203817, 0.12718029256505325, 0.2877200225690357, 0.8141642153805726, 0.9513425324173803, 0.8038578961733532, 0.5024314543238512, 0.03975031465024115, 0.3987288314662669, 0.8534603219530744, 0.429629982290337, 0.04363659971138334, 0.856351337511634, 0.7229754991230302, 0.5161952559061361, 0.7284537423276524, 0.24273873478862862, 0.6564896149378308, 0.8957721534961292, 0.5659449873286422, 0.003880367808674845, 0.15703024361471696, 0.6463996334195571]"
                )
        };

        Triatorium triatorium = new Triatorium();

        for(int i = 0; i<1000;i++) {
            fight(board, triatorium, bots, (i%2));
            board.reset();
        }
    }

    long w1 = 0;
    long w2 = 0;
    long t = 0;
    long p1 = 0;
    long p2 = 0;

    public void fight(Board board, Triatorium triatorium, TriatoriumBot[] bots, int startWith) {

        triatorium.playGameWithBots(board, bots, startWith);

        int[] scores = board.calculateScore();
        p1 += scores[0];
        p2 += scores[1];

        if(scores[0] > scores[1]) {
            w1++;
        } else if(scores[1] > scores[0]) {
            w2++;
        } else {
            t++;
        }

        //[0, 0] 10052 : 10928 | 2257 : 3437 : 4306 (10000)

        System.out.println(Arrays.toString(scores)+" "+p1+" : "+p2+" | "+w1+" : "+w2 + " : "+t + " ("+(w1+w2+t)+")");

        printBoard(board);

    }
}
